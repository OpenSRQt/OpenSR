name: Code formatting and linting

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  BUILD_TYPE: Debug

jobs:
  lint:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install dependencies
        uses: ./.github/actions/install-dependencies-composite-action

      - name: Configure CMake
        run: cmake -G Ninja -S . -B build -DCMAKE_CXX_COMPILER=clang++ -DBUILD_ALL_TOOLS=Yes -DBUILD_TESTS=Yes -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
      
      - uses: cpp-linter/cpp-linter-action@v2
        id: linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: '19'
          database: 'build'
          ignore: 'QML|data|.github|build|Engine/3rdparty|Engine/shaders|tools|anyrpc|spix'
          style: 'file'
          tidy-checks: ''
          step-summary: true
          files-changed-only: true
          tidy-review: true
          format-review: true
          thread-comments: ${{ github.event_name == 'pull_request' && 'update' }}
          
      - name: Check failed
        if: steps.linter.outputs.checks-failed > 0
        run: exit 1